buffer_write_access - Проверяет, можно ли записывать данные в буфер
Если не установлен флаг переполнения или позиции пустые

prohibit_buffer_end
Запрещает адрес на месте end (то есть берет адрес end, записывает в proh и добавляет proh в конец списка prohibited)
Если end == begin
	Обновляем begin
Обновляет end
Если end == begin, ставим флаг переполнения (overflow)
//TODO:Впереди не может быть неиспользованной pos (stop_pos), поэтому, если встречается pos, останавливаемся


//TODO: Думаю, стоит вынести проверку наружу
//TODO: А где надо установить флаг переполнения?

НЕ ДОЛЖНА МЕНЯТЬ stop_pos
МОЖЕТ МЕНЯТЬ begin
МОЖЕТ СТАВИТЬ overflow

unprohibit_buffer
Удаляет текущий запрет из списка запрещенных адресов
Если запрет был в начале списка, то необходимо обновить end_read и установить stop_pos = NULL (потому что end_read сместилось).

НЕ ДОЛЖЕН УСТАНАВЛИВАТЬ overflow (это уже делается в prohibit_buffer_end)

push_used_position_begin
Устанавливает адрес в pos
Вставляет позицию в начало списка.
В случае, если данных нет (то есть begin == end и !overflow), то устанавливает stop_pos = первая позиция.

ДОЛЖНА УСТАНАВЛИВАТЬ АДРЕС В pos

push_used_position_after
Устанавливает адрес в pos
Вставляет позицию после предыдщуей.
Если позиция->addr == end_read, то stop_pos = эта позиция

ДОЛЖНА УСТАНАВЛИВАТЬ АДРЕС В pos

pop_used_position
Удаляет используемую позицию.
Если позиция является первой, то begin сдвигается в адрес следующей позиции, сбрасывается флаг переполнения (overflow)
Если позиция является последней, то stop_pos = NULL;

МОЖЕТ СБРАСЫВАТЬ ФЛАГ ПЕРЕПОЛНЕНИЯ overflow
МОЖЕТ СДВИГАТЬ begin
МОЖЕТ СБРАСЫВАТЬ stop_pos

Условия:
У них аргументы должны быть const
Они ничего не должны менять


