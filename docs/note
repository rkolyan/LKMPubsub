**–í–ª–∏—è–Ω–∏–µ `preempt-depth` –Ω–∞ –≤—ã–∑–æ–≤ `synchronize_rcu()` –≤ —è–¥—Ä–µ Linux**

–§—É–Ω–∫—Ü–∏—è `synchronize_rcu()` –≤ —è–¥—Ä–µ Linux –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–µ–∫—É—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —á—Ç–µ–Ω–∏—è (—á–∏—Ç–∞—Ç–µ–ª–µ–π) –≤ –º–µ—Ö–∞–Ω–∏–∑–º–µ RCU (Read-Copy Update). –û–¥–Ω–∞–∫–æ –µ—ë –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ–º `preempt-depth`. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º, –∫–∞–∫ `preempt-depth` –≤–ª–∏—è–µ—Ç –Ω–∞ –≤—ã–∑–æ–≤ `synchronize_rcu()`.

---

### **1. –ß—Ç–æ —Ç–∞–∫–æ–µ `preempt-depth`?**
`preempt-depth` ‚Äî —ç—Ç–æ —Å—á–µ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç **—É—Ä–æ–≤–µ–Ω—å –∑–∞–ø—Ä–µ—Ç–∞ –≤—ã—Ç–µ—Å–Ω–µ–Ω–∏—è** (preemption). –û–Ω —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –≤ –∞—Ç–æ–º–∞—Ä–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞—Ö, —Ç–∞–∫–∏—Ö –∫–∞–∫:
- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π (IRQ),
- –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏ —Å –∑–∞–ø—Ä–µ—Ç–æ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π (`spin_lock_irqsave()`),
- –ö–æ–Ω—Ç–µ–∫—Å—Ç—ã softirq/tasklet.

–ï—Å–ª–∏ `preempt-depth > 0`, —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç **–Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã—Ç–µ—Å–Ω–µ–Ω** (–ø–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω), –∞ —Ç–∞–∫–∂–µ **–Ω–µ –¥–æ–ø—É—Å–∫–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫** (sleep).

---

### **2. –ü–æ—á–µ–º—É `preempt-depth` –≤–ª–∏—è–µ—Ç –Ω–∞ `synchronize_rcu()`?**
–§—É–Ω–∫—Ü–∏—è `synchronize_rcu()` **–±–ª–æ–∫–∏—Ä—É–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ** –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö —á–∏—Ç–∞—Ç–µ–ª–µ–π RCU. –î–ª—è —ç—Ç–æ–≥–æ –æ–Ω–∞:
1. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞—Ç–Ω—ã–π –≤—ã–∑–æ–≤ (grace period callback).
2. –û–∂–∏–¥–∞–µ—Ç, –ø–æ–∫–∞ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã –Ω–µ –ø—Ä–æ–π–¥—É—Ç —á–µ—Ä–µ–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–∫–≤–æ" (quiescent state).

–û–¥–Ω–∞–∫–æ **–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞** –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞—Ö —Å `preempt-depth > 0`, —Ç–∞–∫–∏—Ö –∫–∞–∫:
- –ê—Ç–æ–º–∞—Ä–Ω—ã–µ —Å–µ–∫—Ü–∏–∏,
- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π,
- –ö–æ–Ω—Ç–µ–∫—Å—Ç—ã, –≥–¥–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –ø–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ.

–ï—Å–ª–∏ –≤—ã–∑–≤–∞—Ç—å `synchronize_rcu()` –≤ —Ç–∞–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö, —è–¥—Ä–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç **kernel panic** —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º `BUG: scheduling while atomic`.

---

### **3. –ü—Ä–∏–º–µ—Ä—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è**
#### –ü—Ä–∏–º–µ—Ä 1: –í—ã–∑–æ–≤ –≤ –∞—Ç–æ–º–∞—Ä–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
```c
void my_interrupt_handler(void) {
    spin_lock(&lock);
    synchronize_rcu();  // –û–®–ò–ë–ö–ê: preempt-depth > 0 (–∞—Ç–æ–º–∞—Ä–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç)
    spin_unlock(&lock);
}
```
–†–µ–∑—É–ª—å—Ç–∞—Ç: `BUG: scheduling while atomic`.

#### –ü—Ä–∏–º–µ—Ä 2: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ —Å–ø–∏–Ω-–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
```c
spin_lock(&lock);
synchronize_rcu();  // –û–®–ò–ë–ö–ê: –∑–∞–ø—Ä–µ—â–µ–Ω–æ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
spin_unlock(&lock);
```

---

### **4. –ö–∞–∫ –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º?**
#### –ü—Ä–∞–≤–∏–ª–æ 1: –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç
–ü–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º `synchronize_rcu()` —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç **–Ω–µ –∞—Ç–æ–º–∞—Ä–Ω—ã–π**:
```c
if (preempt_count() > 0 || in_interrupt()) {
    pr_err("synchronize_rcu() –Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –∑–¥–µ—Å—å!\n");
    return;
}
synchronize_rcu();  // –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –µ—Å–ª–∏ preempt-depth == 0
```

#### –ü—Ä–∞–≤–∏–ª–æ 2: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `call_rcu()` –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –æ–∂–∏–¥–∞–Ω–∏—è
–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã –≤ –∞—Ç–æ–º–∞—Ä–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `call_rcu()`, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ:
```c
void my_rcu_callback(struct rcu_head *rcu) {
    kfree(container_of(rcu, struct my_data, rcu));
}

void my_interrupt_handler(void) {
    struct my_data *data = rcu_dereference(global_data);
    call_rcu(&data->rcu, my_rcu_callback);  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ
}
```

#### –ü—Ä–∞–≤–∏–ª–æ 3: –ò–∑–±–µ–≥–∞–π—Ç–µ `synchronize_rcu()` –≤ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞—Ö
- –í –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π (IRQ),
- –í–Ω—É—Ç—Ä–∏ —Å–ø–∏–Ω-–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ (`spin_lock()`),
- –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞—Ö softirq/tasklet (–µ—Å–ª–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —è–¥—Ä–æ–º).

---

### **5. –ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å `preempt-depth`?**
–î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
- –ú–∞–∫—Ä–æ—Å `preempt_count()`, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å `preempt-depth`.
- –§—É–Ω–∫—Ü–∏—é `in_atomic()`, –ø—Ä–æ–≤–µ—Ä—è—é—â—É—é, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∫–æ–¥ –≤ –∞—Ç–æ–º–∞—Ä–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ.

–ü—Ä–∏–º–µ—Ä:
```c
if (in_atomic() || irqs_disabled()) {
    pr_warn("–ö–æ–Ω—Ç–µ–∫—Å—Ç –∞—Ç–æ–º–∞—Ä–Ω—ã–π! preempt-depth = %d\n", preempt_count());
}
```

---

### **6. –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è PREEMPT_RT**
–í —è–¥—Ä–∞—Ö —Å –ø–∞—Ç—á–µ–º **PREEMPT_RT** (Real-Time) —Å–ø–∏–Ω-–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–∞–º–µ–Ω—è—é—Ç—Å—è –Ω–∞ –º—å—é—Ç–µ–∫—Å—ã, –∏ –º–Ω–æ–≥–∏–µ –∞—Ç–æ–º–∞—Ä–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≤—ã—Ç–µ—Å–Ω—è–µ–º—ã–º–∏. –û–¥–Ω–∞–∫–æ –¥–∞–∂–µ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ `synchronize_rcu()` –º–æ–∂–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç–∏, —Ç–∞–∫ –∫–∞–∫:
- –í —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã.
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `synchronize_rcu_expedited()` –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è grace period.

---

### **–ò—Ç–æ–≥**
- **`synchronize_rcu()` –Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–∏ `preempt-depth > 0`** ‚Äî —ç—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –ø–∞–Ω–∏–∫–µ.
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `call_rcu()` –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ –≤ –∞—Ç–æ–º–∞—Ä–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞—Ö.
- –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º `synchronize_rcu()`.

–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ –æ—à–∏–±–∫—É `BUG: scheduling while atomic`, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:
1. –ì–¥–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è `synchronize_rcu()`.
2. –ó–Ω–∞—á–µ–Ω–∏–µ `preempt-depth` –≤ –º–æ–º–µ–Ω—Ç –≤—ã–∑–æ–≤–∞.
3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `call_rcu()` –≤–º–µ—Å—Ç–æ `synchronize_rcu()` –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –≤ –∞—Ç–æ–º–∞—Ä–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞—Ö.



–ü—Ä–∏–∫–æ–ª
[200~–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ RCU (Read-Copy-Update) –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ **kretprobe** –≤ Linux –¥–æ–ø—É—Å—Ç–∏–º–æ, –Ω–æ —Å —É—á—ë—Ç–æ–º –∫–ª—é—á–µ–≤—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –†–∞–∑–±–µ—Ä—ë–º—Å—è –ø–æ–¥—Ä–æ–±–Ω–µ–µ:

---

### 1. **–ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è kretprobe**
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ kretprobe –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ **–∞—Ç–æ–º–∞—Ä–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ** (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –∏–ª–∏ —Å –æ—Ç–∫–ª—é—á—ë–Ω–Ω–æ–π –ø—Ä–µ–µ–º–ø—Ü–∏–µ–π). –í —Ç–∞–∫–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∑–∞–ø—Ä–µ—â–µ–Ω—ã:
- –û–ø–µ—Ä–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, `mutex_lock()`, `kmalloc(GFP_KERNEL)`).
- –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–π, —Ç—Ä–µ–±—É—é—â–∏—Ö –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –æ–∂–∏–¥–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, `synchronize_rcu()`).

---

### 2. **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ RCU –≤ –∞—Ç–æ–º–∞—Ä–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ**
- **–ß—Ç–µ–Ω–∏–µ —á–µ—Ä–µ–∑ RCU** (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `rcu_read_lock()`/`rcu_read_unlock()`) **–¥–æ–ø—É—Å—Ç–∏–º–æ**, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–µ –±–ª–æ–∫–∏—Ä—É—é—Ç –∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –∞—Ç–æ–º–∞—Ä–Ω–æ.
- **–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö** —á–µ—Ä–µ–∑ `call_rcu()` **—Ç–∞–∫–∂–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ**, –ø–æ—Å–∫–æ–ª—å–∫—É —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç.

–û–¥–Ω–∞–∫–æ:
- **–ó–∞–ø—Ä–µ—â–µ–Ω—ã –±–ª–æ–∫–∏—Ä—É—é—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ RCU**, —Ç–∞–∫–∏–µ –∫–∞–∫ `synchronize_rcu()` –∏–ª–∏ `rcu_barrier()`, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å –æ–∂–∏–¥–∞–Ω–∏–µ.

---

### 3. **–ü—Ä–∏–º–µ—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è**
```c
static void rcu_callback(struct rcu_head *head) {
    // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
    kfree(container_of(head, struct my_data, rcu));
}

int kretprobe_handler(struct kretprobe_instance *ri, struct pt_regs *regs) {
    struct my_data *data = this_cpu_ptr(&percpu_data);
    
    rcu_read_lock();
    // –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, –∑–∞—â–∏—â—ë–Ω–Ω—ã—Ö RCU
    struct shared_data *s = rcu_dereference(data->shared_ptr);
    if (s) {
        // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ s
    }
    rcu_read_unlock();

    // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    struct my_data *old = xchg(&data->shared_ptr, new_ptr);
    if (old)
        call_rcu(&old->rcu, rcu_callback);

    return 0;
}
```

---

### 4. **–í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è**
- **–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞**: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ —Å –∞—Ç–æ–º–∞—Ä–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º.
- **–õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö**: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `percpu`-–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã, –º–∏–Ω–∏–º–∏–∑–∏—Ä—É—é—â–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.
- **–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ**: –¢—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∫–æ–¥ –Ω–∞ —è–¥—Ä–µ —Å –≤–∫–ª—é—á—ë–Ω–Ω—ã–º `CONFIG_PREEMPT`, `CONFIG_DEBUG_ATOMIC_SLEEP` –∏ –¥—Ä—É–≥–∏–º–∏ –æ–ø—Ü–∏—è–º–∏ –æ—Ç–ª–∞–¥–∫–∏.

---

### –ò—Ç–æ–≥
**–î–∞**, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å RCU –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ kretprobe –º–æ–∂–Ω–æ, –Ω–æ **—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π**:
- –ß—Ç–µ–Ω–∏–µ —á–µ—Ä–µ–∑ `rcu_dereference()`.
- –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ `call_rcu()`.

**–ó–∞–ø—Ä–µ—â–µ–Ω–æ**:
- –õ—é–±—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ–∂–∏–¥–∞–Ω–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, `synchronize_rcu()`).

–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ RCU –≤ kretprobe –ø–æ–∑–≤–æ–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–∞–∑–¥–µ–ª—è–µ–º—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –Ω–µ –Ω–∞—Ä—É—à–∞—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∞—Ç–æ–º–∞—Ä–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.


--------------------------
–û–ü–Ø–¢–¨ KRETPROBE
(Due to technical issues, the search service is temporarily unavailable.)

–í —Å—Ç—Ä—É–∫—Ç—É—Ä–µ **kretprobe** –µ—Å—Ç—å –¥–≤–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞: **entry_handler** –∏ **handler**. –û–Ω–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —ç—Ç–∞–ø–∞—Ö –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∏–º–µ—é—Ç —Å–≤–æ–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, –≤–∫–ª—é—á–∞—è –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä—ë–º—Å—è, —á–µ–º –æ–Ω–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –∏ –∫–∞–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –Ω–∞ –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö.

---

### 1. **entry_handler**
- **–ö–æ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è**: –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è **–ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º –≤ —Ü–µ–ª–µ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é** (—Ç–æ –µ—Å—Ç—å –≤ –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —Ü–µ–ª–µ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è).
- **–ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è**: 
  - –ê–Ω–∞–ª–æ–≥–∏—á–µ–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç—É, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ü–µ–ª–µ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è.
  - –ï—Å–ª–∏ —Ü–µ–ª–µ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å–∞, —Ç–æ `entry_handler` —Ç–∞–∫–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å–∞.
  - –ï—Å–ª–∏ —Ü–µ–ª–µ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è, —Ç–æ `entry_handler` –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è.
- **–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ**:
  - –ï—Å–ª–∏ `entry_handler` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `0`, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è.
  - –ï—Å–ª–∏ `entry_handler` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–Ω—É–ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ **–ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è**, –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ä–∞–∑—É –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –≤ `handler`.

---

### 2. **handler**
- **–ö–æ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è**: –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è **–ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–µ–ª–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏** (—Ç–æ –µ—Å—Ç—å –≤ –º–æ–º–µ–Ω—Ç –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏).
- **–ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è**:
  - –í—Å–µ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ **–∞—Ç–æ–º–∞—Ä–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ**.
  - –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è, —Ç–∞–∫ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞, –Ω–æ —Å –æ—Ç–∫–ª—é—á—ë–Ω–Ω–æ–π –ø—Ä–µ–µ–º–ø—Ü–∏–µ–π.
- **–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ**:
  - –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è.

---

### 3. **–†–∞–∑–ª–∏—á–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ**
| –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞          | `entry_handler`                          | `handler`                              |
|-------------------------|------------------------------------------|----------------------------------------|
| **–ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è** | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ü–µ–ª–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏     | –í—Å–µ–≥–¥–∞ –∞—Ç–æ–º–∞—Ä–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç             |
| **–ë–ª–æ–∫–∏—Ä—É—é—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏**| –†–∞–∑—Ä–µ—à–µ–Ω—ã, –µ—Å–ª–∏ —Ü–µ–ª–µ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ | –ó–∞–ø—Ä–µ—â–µ–Ω—ã (–∞—Ç–æ–º–∞—Ä–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç) |
| **–í—ã–∑–æ–≤**               | –ü–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º —Ü–µ–ª–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏        | –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–µ–ª–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏      |
| **–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ**| –ú–æ–∂–µ—Ç –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ | –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è                        |

---

### 4. **–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è**
```c
#include <linux/kernel.h>
#include <linux/module.h>
#include <linux/kprobes.h>

static struct kretprobe my_kretprobe = {
    .handler = kretprobe_handler,
    .entry_handler = entry_handler,
    .kp.symbol_name = "do_fork", // –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞
};

static int entry_handler(struct kretprobe_instance *ri, struct pt_regs *regs) {
    printk(KERN_INFO "entry_handler: –í—Ö–æ–¥ –≤ do_fork\n");
    return 0; // –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ do_fork
}

static int kretprobe_handler(struct kretprobe_instance *ri, struct pt_regs *regs) {
    printk(KERN_INFO "handler: –í—ã—Ö–æ–¥ –∏–∑ do_fork\n");
    return 0;
}

static int __init my_module_init(void) {
    int ret;
    ret = register_kretprobe(&my_kretprobe);
    if (ret < 0) {
        printk(KERN_ERR "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ kretprobe\n");
        return ret;
    }
    printk(KERN_INFO "kretprobe –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω\n");
    return 0;
}

static void __exit my_module_exit(void) {
    unregister_kretprobe(&my_kretprobe);
    printk(KERN_INFO "kretprobe —É–¥–∞–ª—ë–Ω\n");
}

module_init(my_module_init);
module_exit(my_module_exit);

MODULE_LICENSE("GPL");
MODULE_AUTHOR("–í–∞—à–µ –∏–º—è");
```

---

### 5. **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏**
- **entry_handler**:
  - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º —Ü–µ–ª–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
  - –ï—Å–ª–∏ —Ü–µ–ª–µ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å–∞, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä—É—é—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.
- **handler**:
  - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ü–µ–ª–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
  - –ò–∑–±–µ–≥–∞–π—Ç–µ –±–ª–æ–∫–∏—Ä—É—é—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π, —Ç–∞–∫ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –∞—Ç–æ–º–∞—Ä–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ.

---

### 6. **–ò—Ç–æ–≥**
- **entry_handler** –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–¥ —Ü–µ–ª–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π –∏ –Ω–∞—Å–ª–µ–¥—É–µ—Ç –µ—ë –∫–æ–Ω—Ç–µ–∫—Å—Ç.
- **handler** –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ü–µ–ª–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –∞—Ç–æ–º–∞—Ä–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ.
- –í—ã–±–æ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–∞–¥–∞—á–∏: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `entry_handler` –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ `handler` –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.
